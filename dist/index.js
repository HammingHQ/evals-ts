import{a}from"./chunk-EOEY74H4.js";import"./chunk-KYQXZ7C2.js";import{a as s}from"./chunk-N6UUDW67.js";import{a as n}from"./chunk-NPI6NUXF.js";import{a as o}from"./chunk-T7FLH3I7.js";import"./chunk-JBBCHZDP.js";import"./chunk-IJG4FX6E.js";import"./chunk-P7625NFJ.js";import{a as r}from"./chunk-ZVMTSSPE.js";import"./chunk-7JHF74GD.js";import"./chunk-2TYLN5HE.js";import{b as p}from"./chunk-ULXN5EBY.js";import"./chunk-YJZ6KS6Y.js";import"./chunk-7BZ3Y7JA.js";import{a as e}from"./chunk-GQSCBKA6.js";var c=["apiKey","baseURL"],m=class extends r{constructor(t){let i=Object.keys(t).filter(y=>!c.includes(y));i.length>0&&console.warn(`WARNING: Unexpected config keys found: ${i.join(", ")}. Valid config keys are: ${c.join(", ")}. The unexpected keys will be ignored.`);super({apiKey:t.apiKey,baseURL:t.baseURL??"https://app.hamming.ai/api/rest"});e(this,"experiments",new o(this));e(this,"datasets",new n(this));e(this,"tracing",new a(this));e(this,"monitoring",new p(this));e(this,"logger",new s(this));this.logger.start()}};export{m as Hamming};
//# sourceMappingURL=index.js.map