"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkOG6MVXZIcjs = require('./chunk-OG6MVXZI.cjs');var _chunk7ARU3YXQcjs = require('./chunk-7ARU3YXQ.cjs');var o=512,a= exports.a =class{constructor(e){_chunk7ARU3YXQcjs.a.call(void 0, this,"client");_chunk7ARU3YXQcjs.a.call(void 0, this,"queue",[]);_chunk7ARU3YXQcjs.a.call(void 0, this,"stopped",!1);_chunk7ARU3YXQcjs.a.call(void 0, this,"queueHasMessages",new _chunkOG6MVXZIcjs.a);this.client=e}log(e){this.queue.push(e),this.queueHasMessages.set()}async start(){for(console.log("Starting logger thread..");!this.stopped;)await this.queueHasMessages.wait(),await this._processQueue();await this._processQueue(),console.log("Logger thread exited!")}stop(){console.log("Waiting for logger thread to exit.."),this.stopped=!0}_drainQueue(){let e=Math.min(this.queue.length,o);return this.queue.splice(0,e)}async _processQueue(){let e=this._drainQueue();await this._publish(e),this.queue.length===0&&this.queueHasMessages.reset()}async _publish(e){if(e.length!==0){process.env.NODE_ENV==="development"&&console.log(`Publishing ${e.length} message(s)..`);try{await this.client.fetch("/logs",{method:"POST",body:JSON.stringify({logs:e.map(s=>({...s,payload:{...s.payload,session_id:_optionalChain([s, 'access', _ => _.payload, 'optionalAccess', _2 => _2.session_id]),seq_id:_optionalChain([s, 'access', _3 => _3.payload, 'optionalAccess', _4 => _4.seq_id]),parent_seq_id:_optionalChain([s, 'access', _5 => _5.payload, 'optionalAccess', _6 => _6.parent_seq_id])}}))})}),process.env.NODE_ENV==="development"&&console.log(`Published ${e.length} messages!`)}catch(s){console.error(`Failed to publish messages: ${s}`)}}}};exports.a = a;
//# sourceMappingURL=chunk-STGSSSLW.cjs.map