{"version":3,"sources":["../src/types.ts"],"names":["ScoreType","ExperimentStatus"],"mappings":"AAAO,IAAKA,OACVA,EAAA,WAAa,cACbA,EAAA,aAAe,gBACfA,EAAA,cAAgB,iBAChBA,EAAA,iBAAmB,oBACnBA,EAAA,cAAgB,gBAChBA,EAAA,WAAa,cACbA,EAAA,QAAU,UACVA,EAAA,OAAS,UARCA,OAAA,IAeAC,OACVA,EAAA,QAAU,UACVA,EAAA,QAAU,UACVA,EAAA,QAAU,UACVA,EAAA,eAAiB,iBACjBA,EAAA,SAAW,WACXA,EAAA,OAAS,SANCA,OAAA","sourcesContent":["export enum ScoreType {\n  AccuracyAI = \"accuracy_ai\",\n  FactsCompare = \"facts_compare\",\n  ContextRecall = \"context_recall\",\n  ContextPrecision = \"context_precision\",\n  Hallucination = \"hallucination\",\n  StringDiff = \"string_diff\",\n  Refusal = \"refusal\",\n  SqlAst = \"sql_ast\",\n}\n\nexport type InputType = Record<string, any>;\nexport type OutputType = Record<string, any>;\nexport type MetadataType = Record<string, any>;\n\nexport enum ExperimentStatus {\n  CREATED = \"CREATED\",\n  RUNNING = \"RUNNING\",\n  SCORING = \"SCORING\",\n  SCORING_FAILED = \"SCORING_FAILED\",\n  FINISHED = \"FINISHED\",\n  FAILED = \"FAILED\",\n}\n\nexport interface Experiment {\n  id: string;\n  name: string;\n  description?: string | null;\n  datasetId: number;\n  datasetVersionId?: number;\n  status: ExperimentStatus;\n}\n\nexport interface ExperimentItemMetrics {\n  durationMs?: number;\n}\n\nexport interface ExperimentItem {\n  id: string;\n  experimentId: string;\n  datasetItemId: string;\n  output: OutputType;\n  metrics: ExperimentItemMetrics;\n}\n\nexport interface ExperimentItemContext {\n  item: ExperimentItem;\n  startTs: number;\n}\n\nexport type DatasetId = string;\n\nexport interface DatasetItemValue {\n  input: InputType;\n  output: OutputType;\n  metadata: MetadataType;\n}\n\nexport type DatasetItem = DatasetItemValue & { id: string };\n\nexport interface Dataset {\n  id: string;\n  name: string;\n  description?: string;\n}\n\nexport type DatasetWithItems = Dataset & { items: DatasetItem[] };\n\nexport interface RunOptions {\n  dataset: DatasetId;\n  name?: string;\n  scoring?: ScoreType[];\n  metadata?: MetadataType;\n  parallel?: boolean | number;\n}\n\ninterface TracingContext {\n  experiment?: {\n    itemId?: string;\n  };\n}\n\nexport type RunContext = {\n  tracing: TracingContext;\n};\n\nexport type Runner = (input: InputType) => Promise<OutputType>;\n\nexport interface ClientOptions {\n  apiKey: string;\n  baseURL?: string;\n}\n\nexport interface CreateDatasetOptions {\n  name: string;\n  description?: string;\n  items: DatasetItemValue[];\n}\n\nexport type TraceEvent = Record<string, unknown>;\n\nexport interface GenerationParams {\n  input?: string;\n  output?: string;\n  metadata?: {\n    model?: string;\n  };\n}\n\nexport interface Document {\n  pageContent: string;\n  metadata: Record<string, any>;\n}\n\nexport interface RetrievalParams {\n  query?: string;\n  results?: Document[] | string[];\n  metadata?: {\n    engine?: string;\n  };\n}\n\nexport interface Trace {\n  id: number;\n  experimentItemId: string;\n  parentId?: number;\n  event: TraceEvent;\n}\n"]}