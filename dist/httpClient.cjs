"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunk7ARU3YXQcjs = require('./chunk-7ARU3YXQ.cjs');var u=class{constructor(e){_chunk7ARU3YXQcjs.a.call(void 0, this,"apiKey");_chunk7ARU3YXQcjs.a.call(void 0, this,"baseURL");this.apiKey=e.apiKey,this.baseURL=this.sanitizeBaseUrl(e.baseURL)}sanitizeBaseUrl(e){return e.trim().replace(/\/$/,"")}async fetch(e,t,s=3,i=1e3){let r=this.baseURL+e,o=null,n=i;for(let E=0;E<s;E++)try{let a=await this.attemptFetch(r,t);if(a.ok)return a;let c=this.generateErrorMessage(a,r);if(o=new Error(c),this.nonTransientError(a))break;if(this.shouldRetry(a))await this.waitForRetry(a,n),n*=2;else throw new Error(c)}catch(a){if(o=a,!this.isNetworkError(a))break;await this.delay(n),n*=2}throw o}nonTransientError(e){return[401,403,404,400].includes(e.status)}delay(e){return new Promise(t=>setTimeout(t,e))}shouldRetry(e){return e.status===429||e.status>=500}isNetworkError(e){return e instanceof TypeError}generateErrorMessage(e,t){let s=e.status,i=e.statusText,r=`Request failed with status ${s} ${i} while accessing ${t}.`;return s===401?r=`UNAUTHORIZED: Invalid API key ending in '${this.apiKey.slice(-4)}'. Visit https://app.hamming.ai/settings to see valid API keys.`:s===403?r=`FORBIDDEN: You do not have permission to access ${t}.`:s===404?r=`NOT FOUND: The requested resource at ${t} could not be found.`:s===429?r="TOO MANY REQUESTS: You are being rate limited. Please wait before making additional requests. If the issue persists, feel free to email us at founders@hamming.ai for help.":s>=500&&(r=`SERVER ERROR: There was a problem with the server while accessing ${t}. If the issue persists, feel free to email us at founders@hamming.ai for help.`),r}async attemptFetch(e,t){let s=this.createHeaders(_optionalChain([t, 'optionalAccess', _ => _.headers]));return await fetch(e,{...t,headers:s})}createHeaders(e){let t={...e,authorization:`Bearer ${this.apiKey}`};return(!e||!("content-type"in e))&&(t["content-type"]="application/json"),t}async waitForRetry(e,t){let s=e.headers.get("Retry-After"),i=s?this.calculateRetryDelayForHeaders(s,t):t;await this.delay(i)}calculateRetryDelayForHeaders(e,t){if(parseInt(e,10))return parseInt(e,10)*1e3;let s=new Date(e);return isNaN(s.getTime())?t:s.getTime()-Date.now()}};exports.HttpClient = u;
//# sourceMappingURL=httpClient.cjs.map