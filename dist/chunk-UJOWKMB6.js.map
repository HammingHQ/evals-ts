{"version":3,"sources":["../src/resources/prompts.ts"],"sourcesContent":["import type { Hamming } from \"../client\";\nimport { Prompt, PromptWithContent } from \"../types\";\n\ninterface ListPromptsResponse {\n  prompts: Prompt[];\n}\n\ninterface GetPromptResponse {\n  prompt: PromptWithContent;\n}\n\nexport class Prompts {\n  constructor(private readonly client: Hamming) {}\n\n  async list(label?: string): Promise<Prompt[]> {\n    let url = \"/prompts\";\n    if (label) {\n      url += `?label=${label}`;\n    }\n    const resp = await this.client.fetch(url);\n    const prompts = (await resp.json()) as ListPromptsResponse;\n    return prompts.prompts;\n  }\n\n  async get(\n    slug: string,\n    label?: string,\n    version?: string,\n  ): Promise<PromptWithContent> {\n    let url = `/prompts/${slug}`;\n    if (label) {\n      url += `?label=${label}`;\n    }\n    if (version) {\n      url += `&version=${version}`;\n    }\n    const resp = await this.client.fetch(url);\n    const prompt = (await resp.json()) as GetPromptResponse;\n    return prompt.prompt;\n  }\n}\n"],"mappings":"AAWO,IAAMA,EAAN,KAAc,CACnB,YAA6BC,EAAiB,CAAjB,YAAAA,CAAkB,CAE/C,MAAM,KAAKC,EAAmC,CAC5C,IAAIC,EAAM,WACV,OAAID,IACFC,GAAO,UAAUD,CAAK,KAGP,MADJ,MAAM,KAAK,OAAO,MAAMC,CAAG,GACZ,KAAK,GAClB,OACjB,CAEA,MAAM,IACJC,EACAF,EACAG,EAC4B,CAC5B,IAAIF,EAAM,YAAYC,CAAI,GAC1B,OAAIF,IACFC,GAAO,UAAUD,CAAK,IAEpBG,IACFF,GAAO,YAAYE,CAAO,KAGZ,MADH,MAAM,KAAK,OAAO,MAAMF,CAAG,GACb,KAAK,GAClB,MAChB,CACF","names":["Prompts","client","label","url","slug","version"]}