"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var x=Object.defineProperty;var v=(r,t,e)=>t in r?x(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var s=(r,t,e)=>(v(r,typeof t!="symbol"?t+"":t,e),e);var D=(a=>(a.CREATED="CREATED",a.RUNNING="RUNNING",a.SCORING="SCORING",a.SCORING_FAILED="SCORING_FAILED",a.FINISHED="FINISHED",a.FAILED="FAILED",a))(D||{}),d=class{constructor(t){s(this,"client");this.client=t}async start(t,e){let o=(await(await this.client.fetch(`/experiments/${t.id}/items`,{method:"POST",body:JSON.stringify({datasetItemId:e.id,output:{},metrics:{}})})).json()).item,a=Date.now();return{item:o,startTs:a}}async end(t,e){let{item:n,startTs:i}=t,o=Date.now()-i;await this.client.fetch(`/experiments/${n.experimentId}/items/${n.id}`,{method:"PATCH",body:JSON.stringify({output:e,metrics:{durationMs:o}})}),await this.client.tracing._flush(n.id)}},u=class{constructor(t){s(this,"client");s(this,"items");this.client=t,this.items=new d(this.client)}async run(t,e){let{dataset:n}=t,i=await this.client.datasets.load(n),{name:o=this.generateName(i.name),scoring:a=w,metadata:c={}}=t,p=await this.start(o,n,a,c);try{for(let m of i.items){let I=await this.items.start(p,m),f=await e(m.input);await this.items.end(I,f)}}catch(m){throw await this.end(p,"FAILED"),m}finally{await this.end(p)}}async start(t,e,n,i){return(await(await this.client.fetch("/experiments",{method:"POST",body:JSON.stringify({name:t,dataset:e,status:"RUNNING",scoring:n,metadata:i})})).json()).experiment}async end(t,e="FINISHED"){await this.client.fetch(`/experiments/${t.id}`,{method:"PATCH",body:JSON.stringify({status:e})})}generateName(t){return`Experiment for ${t} - ${new Date().toLocaleString()}`}},E= exports.ScoreType =(c=>(c.AccuracyAI="accuracy_ai",c.AccuracyHuman="accuracy_human",c.FactsCompare="facts_compare",c.ContextRecall="context_recall",c.ContextPrecision="context_precision",c.Hallucination="hallucination",c.StringDiff="string_diff",c))(E||{}),w= exports.DefaultScoreTypes =["string_diff"],l=class{constructor(t){s(this,"client");this.client=t}async load(t){return(await(await this.client.fetch(`/datasets/${t}`)).json()).dataset}async list(){return(await(await this.client.fetch("/datasets")).json()).datasets}async create(t){let{name:e,description:n,items:i}=t;return(await(await this.client.fetch("/datasets",{method:"POST",body:JSON.stringify({name:e,description:n,items:i})})).json()).dataset}},h=class{constructor(t){s(this,"apiKey");s(this,"baseURL");this.apiKey=t.apiKey,this.baseURL=this.sanitize_base_url(t.baseURL)}sanitize_base_url(t){return t=t.trim(),t.endsWith("/")?t.slice(0,-1):t}fetch(t,e){return fetch(this.baseURL+t,{...e,headers:{..._optionalChain([e, 'optionalAccess', _ => _.headers]),authorization:`Bearer ${this.apiKey}`,"content-type":"application/json"}})}},g=class{constructor(t){s(this,"client");s(this,"collected",[]);s(this,"currentLocalTraceId",0);this.client=t}nextTraceId(){return this.currentLocalTraceId++}async _flush(t){let e=this.collected;this.collected=[];let n={id:this.nextTraceId(),experimentItemId:t,event:{kind:"root"}},i=[n];for(let o of e)i.push({id:this.nextTraceId(),experimentItemId:t,parentId:n.id,event:o});await this.client.fetch("/traces",{method:"POST",body:JSON.stringify({traces:i})})}_generationEvent(t){return{kind:"llm",...t}}_retrievalEvent(t){let e=a=>typeof a=="string",n=_optionalChain([t, 'access', _2 => _2.results, 'optionalAccess', _3 => _3.every, 'call', _4 => _4(e)]),i=a=>typeof a=="string"?{pageContent:a,metadata:{}}:a,o=n?_optionalChain([t, 'access', _5 => _5.results, 'optionalAccess', _6 => _6.map, 'call', _7 => _7(i)]):t.results;return{kind:"vector",...t,results:o}}log(t,e){typeof t=="string"?this.collected.push({[t]:e}):this.collected.push(t)}logGeneration(t){this.log(this._generationEvent(t))}logRetrieval(t){this.log(this._retrievalEvent(t))}},y= exports.Hamming =class extends h{constructor(e){super({apiKey:e.apiKey,baseURL:_nullishCoalesce(e.baseURL, () => ("https://app.hamming.ai/api/rest"))});s(this,"experiments",new u(this));s(this,"datasets",new l(this));s(this,"tracing",new g(this))}};exports.DefaultScoreTypes = w; exports.ExperimentStatus = D; exports.Hamming = y; exports.ScoreType = E;
//# sourceMappingURL=index.cjs.map