import{a as t,b as h}from"./chunk-OXHECJZ4.js";var f=429,g=500,d=class{constructor(e){t(this,"apiKey");t(this,"baseURL");t(this,"fetchClient");t(this,"debug",!1);t(this,"retries",3);this.apiKey=e.apiKey,this.baseURL=this.sanitizeBaseUrl(e.baseURL),this.fetchClient=new h,this.debug=process.env.NODE_ENV==="development"}sanitizeBaseUrl(e){return e.trim().replace(/\/$/,"")}async fetch(e,o){let a=this.baseURL+e,s={...o,headers:{...o?.headers,"Content-Type":o?.headers?.["Content-Type"]??"application/json",authorization:`Bearer ${this.apiKey}`}},l=this.debug;l&&(console.log(`
`),console.debug(`Fetching URL: ${a}`),console.debug(`Method: ${s.method||"GET"}`),s.body&&console.debug(`Body: ${s.body}`),console.debug(`Headers: ${JSON.stringify(s.headers,null,2)}`));let p=this.retries,c=await this.fetchClient.fetchRetry(a,{...s,retryOn:function(r,u,i){if(r>=p)return!1;let n=i?.status;return u instanceof TypeError||n===f||n!==void 0&&n>=g},retryDelay:function(r,u,i,n){return console.warn(`Fetch attempt #${r}: input=${n}, error=${u?.message}, response status=${i?.status}, response status text=${i?.statusText}`),Math.pow(2,r)*1e3}});return l&&(console.debug(`Response for ${a}: ${c.status} ${c.statusText}`),console.debug(`
`)),c}};export{d as a};
//# sourceMappingURL=chunk-MWJKW3OQ.js.map