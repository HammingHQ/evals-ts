{"version":3,"sources":["../src/axiosClient.ts"],"names":["axios","axiosRetry","HttpClient","opts","__publicField","retryCount","error","requestConfig","baseURL"],"mappings":"yCAAA,OAAOA,MAA8B,QACrC,OAAOC,MAAgB,cAQhB,IAAMC,EAAN,KAAiB,CAUtB,YAAYC,EAAyB,CATrCC,EAAA,eACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,aAAiB,IAOf,KAAK,OAASD,EAAK,OACnB,KAAK,QAAU,KAAK,gBAAgBA,EAAK,OAAO,EAChD,KAAK,MAAQ,QAAQ,IAAI,WAAa,cAEtC,KAAK,MAAQH,EAAM,OAAO,CACxB,QAAS,KAAK,QACd,QAAS,CACP,cAAe,UAAU,KAAK,MAAM,EACtC,CACF,CAAC,EAEDC,EAAW,KAAK,MAAO,CACrB,QAAS,EACT,WAAYA,EAAW,iBACvB,QAAS,CAACI,EAAYC,EAAOC,IAAkB,CACzC,KAAK,OACP,QAAQ,IAAI,kBAAkBF,CAAU,QAAQE,EAAc,GAAG,WAAWD,CAAK,EAAE,CAEvF,CACF,CAAC,CACH,CAzBQ,gBAAgBE,EAAyB,CAC/C,OAAOA,EAAQ,KAAK,EAAE,QAAQ,MAAO,EAAE,CACzC,CAwBF","sourcesContent":["import axios, { AxiosInstance } from \"axios\";\nimport axiosRetry from \"axios-retry\";\n\n\ninterface HttpClientOptions {\n  apiKey: string;\n  baseURL: string;\n}\n\nexport class HttpClient { \n  apiKey: string;\n  baseURL: string;\n  axios: AxiosInstance;\n  debug: boolean = false;\n\n  private sanitizeBaseUrl(baseURL: string): string {\n    return baseURL.trim().replace(/\\/$/, \"\");\n  }\n\n  constructor(opts: HttpClientOptions) {\n    this.apiKey = opts.apiKey;\n    this.baseURL = this.sanitizeBaseUrl(opts.baseURL);\n    this.debug = process.env.NODE_ENV === \"development\";\n    \n    this.axios = axios.create({\n      baseURL: this.baseURL,\n      headers: {\n        authorization: `Bearer ${this.apiKey}`,\n      },\n    });\n\n    axiosRetry(this.axios, {\n      retries: 5,\n      retryDelay: axiosRetry.exponentialDelay,\n      onRetry: (retryCount, error, requestConfig) => {\n        if (this.debug) {\n          console.log(`Retry attempt #${retryCount} for ${requestConfig.url}, error=${error}`);\n        }\n      }\n    });\n  }\n}"]}