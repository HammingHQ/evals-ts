"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkDGYN466Bcjs = require('./chunk-DGYN466B.cjs');var _chunk7ARU3YXQcjs = require('./chunk-7ARU3YXQ.cjs');var c=class{constructor(e){_chunk7ARU3YXQcjs.a.call(void 0, this,"client");_chunk7ARU3YXQcjs.a.call(void 0, this,"collected",{});_chunk7ARU3YXQcjs.a.call(void 0, this,"currentLocalTraceId",0);this.client=e}nextTraceId(){return this.currentLocalTraceId++}async _flush(e){let i=_nullishCoalesce(this.collected[e], () => ([]));delete this.collected[e];let n={id:this.nextTraceId(),experimentItemId:e,event:{kind:"root"}},o=[n];for(let t of i)o.push({id:this.nextTraceId(),experimentItemId:e,parentId:n.id,event:t});await this.client.fetch("/traces",{method:"POST",body:JSON.stringify({traces:o})})}_generationEvent(e){return{kind:"llm",...e}}_retrievalEvent(e){let i=r=>typeof r=="string",n=_optionalChain([e, 'access', _ => _.results, 'optionalAccess', _2 => _2.every, 'call', _3 => _3(i)]),o=r=>typeof r=="string"?{pageContent:r,metadata:{}}:r,t=n?_optionalChain([e, 'access', _4 => _4.results, 'optionalAccess', _5 => _5.map, 'call', _6 => _6(o)]):e.results;return{kind:"vector",...e,results:t}}log(e,i){let n=typeof e=="string"?{[e]:i}:e,t=_optionalChain([_chunkDGYN466Bcjs.a, 'access', _7 => _7.getStore, 'call', _8 => _8(), 'optionalAccess', _9 => _9.tracing, 'optionalAccess', _10 => _10.experiment, 'optionalAccess', _11 => _11.itemId]);if(!t){console.error("Unable to log trace event without experiment item ID.");return}this.collected[t]||(this.collected[t]=[]),this.collected[t].push(n)}logGeneration(e){this.log(this._generationEvent(e))}logRetrieval(e){this.log(this._retrievalEvent(e))}};exports.a = c;
//# sourceMappingURL=chunk-5CB3DZG7.cjs.map